import matplotlib.pyplot as plt 
import seaborn as sns 

    # data: данные, которые мы хотим визуализировать. Обычно это датафрейм или массив;
    # x, y: название столбца данных, который мы хотим использовать для построения гистограммы (если data - это DataFrame);
    # hue: используется для добавления цвета по категории данных;
    # multiple: определяет, как будут отображаться подгруппы, указанные с помощью параметра hue;
    # bins: количество корзин (по умолчанию seaborn сам выбирает подходящее количество);
    # binwidth: определяет ширину каждого бина (корзины) в гистограмме;
    # binrange: этот параметр позволяет задавать диапазон значений, которые будут охвачены гистограммой;
    # kde: логический параметр, который определяет, строить ли поверх гистограммы плотность распределения (KDE - Kernel Density Estimate). По умолчанию принимает значение False;
    # stat: определяет, какую статистику нужно вычислять и отображать на гистограмме;
    # cumulative: используется для создания накопительной (кумулятивной) гистограммы (по умолчанию cumulative=False);
    # element: определяет, как будет визуализироваться гистограмма. Например, 'bars' для столбиков или 'step' для ступенчатой линии;
    # color: цвет гистограммы.

penguins = sns.load_dataset('penguins').dropna()
print(penguins.head())

    # 'species' - вид пингвина (Adelie, Chinstrap, Gentoo);
    # 'island' - остров, где были собраны данные (Biscoe, Dream, Torgersen);
    # 'bill_length_mm' - длина клюва в миллиметрах;
    # 'bill_depth_mm' - глубина клюва в миллиметрах;
    # 'flipper_length_mm' - длина ласт в миллиметрах;
    # 'body_mass_g' - масса тела в граммах;
    # 'sex' - пол пингвина (Male, Female).

sns.set_style('darkgrid')
sns.histplot(penguins, 
             x = 'bill_length_mm',
             kde = True,
             color = 'red',
             alpha = 0.5,
            #  binrange=(20, 80),
             bins = range(35, 55, 3),        # как количество, так и список меток
            #  binwidth=2,
             )

plt.show()

# ---------------------
sns.histplot(data=penguins, 
             x='bill_length_mm', 
             stat = 'density'             
                                        # 'count': Количество наблюдений в каждом бине (используется по     умолчанию). Гистограмма показывает, сколько значений попадает в каждую корзину (бин).
                                        # 'frequency': Частота наблюдений в каждом бине. Эта статистика делит количество наблюдений в каждом бине на общее количество наблюдений, показывая долю наблюдений.
                                        # 'density': Указывает, что вместо количества наблюдений (то есть частоты), по оси ординат будет отображаться плотность распределения. Эта статистика нормализует гистограмму так, чтобы суммарная площадь всех баров равнялась 1. Это полезно для сравнения распределений с разным количеством данных.
                                        # 'probability': Вероятность наблюдений в каждом бине. Похожа на density, но вместо плотности показывает вероятность (т.е. сумма высот всех баров равна 1).
                                        # 'percent': Процент наблюдений в каждом бине. Эта статистика умножает частоту на 100, чтобы показать долю в процентах.
                                        # 'proportion': Каждый бин гистограммы показывает долю данных, которые попадают в этот бин относительно общего числа данных. То есть, сумма всех высот бинов будет равна 1.
            )

sns.kdeplot(data=penguins, 
             x='bill_length_mm')

plt.show()

# ------- element -----------------------------
sns.histplot(data=penguins, 
             x='bill_length_mm', 
             element = 'step',          
                                    #   'bars' (по умолчанию): Отображает бины в виде столбцов (баров). Это традиционный вид гистограммы, где высота каждого столбца соответствует количеству наблюдений или другой выбранной метрике.
                                    # 'step': Отображает гистограмму в виде ступенчатого графика. В этом режиме высоты бинов соединяются прямыми линиями, создавая вид ступенек.
                                    # 'poly': Отображает гистограмму в виде линейного графика. В этом режиме вершины каждого бина соединяются прямыми линиями, создавая замкнутую линию, напоминающую линейный график.
            fill = False,
            linewidth = 7,


            )

plt.show()

# cumulative steps -----------------------------------------
sns.histplot(data=penguins, 
             x='bill_length_mm',
             stat = 'percent', 
             element = 'step', 
             fill = False,
             linewidth = 6,
             cumulative=True
            )
plt.axhline(80, color='red', linestyle = '--')

plt.show()

# hue groups ---------------------------------------------------
# Очень удобно для анализа процентного соотношения подгрупп на разных уровнях
sns.histplot(data = penguins,
             x = 'bill_length_mm',
             hue = 'species',
             multiple = 'fill'    
                                    # 'layer' - подгруппы накладываются друг на друга полупрозрачными слоями (по  умолчанию);
                                    # 'dodge' - размещает подгруппы бок о бок;
                                    # 'stack' - подгруппы складываются друг на друга, создавая суммарную высоту;
                                    # 'fill' - нормализует высоты так, чтобы они суммировались до 1.

             )
plt.show()

sns.histplot(data = penguins,
             x = 'bill_length_mm',
             hue = 'species',
             multiple = 'dodge',
             shrink=0.8 
             )
plt.show()

# ----- species and sex ---------------------
sns.histplot(penguins, 
             x = 'species',
             palette='muted',
             hue = 'sex', 
             multiple='dodge',
             shrink=0.7
             )
plt.show()

# hitmap bill_length_mm bill_depth_mm
sns.set_style('white')
sns.histplot(penguins, 
             x = 'bill_length_mm',
             y = 'bill_depth_mm',
             cbar = True,
             stat = 'percent',
             hue='species'
             )
plt.show()

# Nominative vars in y 
sns.histplot(x='bill_length_mm',
             y='species',
             data=penguins,
             palette='muted',
            #  hue='species'
             )
plt.show()

